

/*CSS进阶学习*/
大家学到这里，相信都已经学会使用class选择器和id选择器了，就不再重复讲解了；我们要学习更加高级的选择器的用法，这样就可以更加精准的调控CSS的样式了。

/*常用的选择器*/
通用元素选择器
*{
	margin:0;
}
*选择器是选择页面中所有的元素，这个代码的作用就是所有的元素的margin都设为0。

这个选择器也可以应用到以下的条件下：

.div *{
	margin:0;
}
而这个代码的作用就是将所有class为div的所有子元素的margin都设为0


.div1{
	color:red;
}

这个颜色可以为其他的颜色，比如说蓝色，天蓝色等等，但是要注意的是使用这些颜色时：

第一，是需要用英文来填写

第二，所填的颜色是系统颜色，所有在不同的系统环境下，显示的颜色会有略微的不同，所以在一个访客多元化的条件下，尽量不要使用系统颜色。

X:visited 和 X:link
	
a:link {color:red;}
a:visited {color: purple;}

我们使用`:link`这个伪类来定位所有还没有被访问过的链接。
另外，我们也使用`:visited`来定位所有已经被访问过的链接。

X::hover
	
div:hover {
  background: #e3e3e3;
}

不用说，大家肯定知道它。官方的说法是`user action pseudo class`.听起来有点儿迷糊，其实还好。如果想在用户鼠标飘过的地方涂点儿彩，那这个伪类写法可以办到。

注意旧版本的IE只会对加在锚点`a`标签上的`:hover`伪类起作用。

通常大家在鼠标飘过锚点链接时候加下边框的时候用到它。
	
a:hover {
 border-bottom: 1px solid black;
}

专家提示：border-bottom:1px solid black;比text-decoration:underline;要好看很多。

X:not(selector)
	
div:not(#container) {
   color: blue;
}

`取反`伪类是相当有用的，假设我们要把除`id`为`container`之外的所有`div`标签都选中。那上面那么代码就可以做到。

或者说我想选中所有出段落标签之外的所有标签。
	
*:not(p) {
  color: green;
}


/*特殊选择器*/


X + Y
毗邻元素选择器，选择所有紧跟X之后的Y元素
例子：

div+p｛
	color:red;
}


X > Y
子元素选择器，匹配所有的X下的Y元素
例子：

div > p｛
	color:red;
}

X ~ Y
匹配所有的X之后的Y元素
例子：

div ~ p｛
	color:red;
}


X:first-child
	
ul li:first-child {
   border-top: none;
}

这个结构性的伪类可以选择到第一个子标签，你会经常使用它来取出第一个和最后一个的边框。

假设有个列表，没个标签都有上下边框，那么效果就是第一个和最后一个就会看起来有点奇怪。这时候就可以使用这个伪类来处理这种情况了。


X:last-child
	
ul > li:last-child {
   color: green;
}

这个结构性的伪类，与上面的类似，但是这个是可以选择到最后一个。

另外呢，这篇CSS选择器的教材只是选取最为常用的选择器，并不是完全百分之百的完整，只求实用，所以在这里给学有余力的一个链接，课余可以阅读一下，然后挨个试一下。

http://www.w3school.com.cn/cssref/css_selectors.asp


